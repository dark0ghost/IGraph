        -:    0:Source:/home/project/acid_graph/MatrixGraph/src/MatrixGraph.cpp
        -:    0:Graph:/home/project/acid_graph/cmake-build-debug-coverage/MatrixGraph/CMakeFiles/libMatrixGraph.dir/src/MatrixGraph.cpp.gcno
        -:    0:Data:/home/project/acid_graph/cmake-build-debug-coverage/MatrixGraph/CMakeFiles/libMatrixGraph.dir/src/MatrixGraph.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by dark0ghost on 28.05.2021.
        -:    3://
        -:    4:
        -:    5:#include "MatrixGraph.h"
        -:    6:
function _ZN11MatrixGraphC2Ei called 1 returned 100% blocks executed 60%
        1:    7:MatrixGraph::MatrixGraph(int size): vBool(size), meta(size) {
        1:    7-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
    $$$$$:    7-block  1
call    5 never executed
    $$$$$:    7-block  2
call    6 never executed
       11:    8:    for(std::vector<bool> iter : vBool)
call    0 returned 1
call    1 returned 1
       11:    8-block  0
call    2 returned 11
branch  3 taken 10 (fallthrough)
branch  4 taken 1
       10:    8-block  1
call    5 returned 10
call    6 returned 10
branch  7 taken 10 (fallthrough)
branch  8 taken 0 (throw)
call    9 returned 10
    $$$$$:    8-block  2
call   10 never executed
       10:    9:        iter.assign(meta, false);
       10:    9-block  0
call    0 returned 10
branch  1 taken 10 (fallthrough)
branch  2 taken 0 (throw)
       10:    9-block  1
call    3 returned 10
    $$$$$:    9-block  2
        1:   10:}
        1:   10-block  0
        -:   11:
function _ZN11MatrixGraphC2ERK6IGraph called 1 returned 100% blocks executed 62%
        1:   12:MatrixGraph::MatrixGraph(const IGraph &graph):  meta(graph.VerticesCount()),vBool(graph.VerticesCount()) {
        1:   12-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   12-block  1
call    4 returned 1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   12-block  2
call    8 returned 1
branch  9 taken 1 (fallthrough)
branch 10 taken 0 (throw)
    $$$$$:   12-block  3
call   11 never executed
    $$$$$:   12-block  4
call   12 never executed
       11:   13:    for(std::vector<bool>& iter : vBool)
call    0 returned 1
call    1 returned 1
       11:   13-block  0
call    2 returned 11
branch  3 taken 10 (fallthrough)
branch  4 taken 1
       10:   13-block  1
call    5 returned 10
       10:   14:        iter.assign(meta, false);
call    0 returned 10
branch  1 taken 10 (fallthrough)
branch  2 taken 0 (throw)
       10:   14-block  0
call    3 returned 10
    $$$$$:   14-block  1
        -:   15:
       11:   16:    for(int i = 0; i < meta; i++){
        1:   16-block  0
       11:   16-block  1
branch  0 taken 10 (fallthrough)
branch  1 taken 1
       20:   17:        auto iter = graph.GetNextVertices(i);
       10:   17-block  0
call    0 returned 10
branch  1 taken 10 (fallthrough)
branch  2 taken 0 (throw)
       10:   17-block  1
call    3 returned 10
    $$$$$:   17-block  2
call    4 never executed
      10*:   18:        for(int j : iter)
       10:   18-block  0
call    0 returned 10
call    1 returned 10
       10:   18-block  1
call    2 returned 10
branch  3 taken 0 (fallthrough)
branch  4 taken 10
    %%%%%:   18-block  2
call    5 never executed
    %%%%%:   18-block  3
call    6 never executed
    #####:   19:            AddEdge(i, j);
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   20:    }
        1:   21:}
        1:   21-block  0
        -:   22:
function _ZN11MatrixGraph7AddEdgeEii called 0 returned 0% blocks executed 0%
    #####:   23:void MatrixGraph::AddEdge(int from, int to) {
    #####:   24:    vBool[from][to] = true;
    %%%%%:   24-block  0
call    0 never executed
call    1 never executed
call    2 never executed
    #####:   25:}
        -:   26:
function _ZNK11MatrixGraph13VerticesCountEv called 0 returned 0% blocks executed 0%
    #####:   27:int MatrixGraph::VerticesCount() const {
    #####:   28:    return meta;
    %%%%%:   28-block  0
        -:   29:}
        -:   30:
function _ZNK11MatrixGraph15GetNextVerticesEi called 0 returned 0% blocks executed 0%
    #####:   31:std::vector<int> MatrixGraph::GetNextVertices(int vertex) const {
    #####:   32:    std::vector<int> resp;
    %%%%%:   32-block  0
call    0 never executed
    #####:   33:    for(int i = 0; i < meta; i++) {
    %%%%%:   33-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:   33-block  1
    #####:   34:        if (vBool[vertex][i])
    %%%%%:   34-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:   35:            resp.push_back(i);
    %%%%%:   35-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   36:    }
        -:   37:
    #####:   38:    return resp;
    %%%%%:   38-block  0
    %%%%%:   38-block  1
        -:   39:}
        -:   40:
function _ZNK11MatrixGraph15GetPrevVerticesEi called 0 returned 0% blocks executed 0%
    #####:   41:std::vector<int> MatrixGraph::GetPrevVertices(int vertex) const {
    #####:   42:    std::vector<int> resp;
    %%%%%:   42-block  0
call    0 never executed
    #####:   43:    for(int i = 0; i < meta; i++) {
    %%%%%:   43-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:   43-block  1
    #####:   44:        if (vBool[i][vertex])
    %%%%%:   44-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:   45:            resp.push_back(i);
    %%%%%:   45-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   46:    }
    #####:   47:    return resp;
    %%%%%:   47-block  0
    %%%%%:   47-block  1
        -:   48:}
